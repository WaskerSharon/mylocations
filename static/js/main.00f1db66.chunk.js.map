{"version":3,"sources":["components/features/users/usersSlice.js","components/features/users/UserList.jsx","App.js","reportWebVitals.js","store.js","index.js"],"names":["fetchUsers","createAsyncThunk","a","fetch","response","json","users","usersSlice","createSlice","name","initialState","entities","loading","reducers","userAdded","state","action","push","payload","userUpdated","id","email","existingUser","find","user","userDeleted","filter","extraReducers","pending","fulfilled","rejected","actions","UserList","dispatch","useDispatch","useSelector","className","onClick","to","length","map","i","handleDelete","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","usersReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.00f1db66.chunk.js","sourcesContent":["\r\n\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const fetchUsers = createAsyncThunk( 'users/fetchUsers', async () => {\r\n  const response = await fetch ( 'https://jsonplaceholder.typicode.com/users' );\r\n  const users = await response.json();\r\n  return users;\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState: {\r\n    entities: [],\r\n    loading: false,\r\n  },\r\n\r\n    reducers: {\r\n      userAdded( state, action ) {\r\n        state.entities.push( action.payload );\r\n      },\r\n      userUpdated( state, action ) {\r\n        const { id, name, email } = action.payload;\r\n        const existingUser = state.entities.find( ( user ) => user.id === id );\r\n        \r\n        if ( existingUser ) {\r\n          existingUser.name = name;\r\n          existingUser.email = email;\r\n        }\r\n      },\r\n      userDeleted( state, action ) {\r\n        const { id } = action.payload;\r\n        const existingUser = state.entities.find( ( user ) => user.id === id );\r\n        if ( existingUser ) {\r\n          return state.entities.filter( ( user ) => user.id !== id );\r\n        }\r\n      },\r\n    },\r\n\r\n    extraReducers: {\r\n      [ fetchUsers.pending ]: ( state, action ) => {\r\n        state.loading = true;\r\n      },\r\n      [ fetchUsers.fulfilled ]: ( state, action ) => {\r\n        state.loading = false;\r\n        state.entities = [ ...state.entities, ...action.payload ];\r\n      },\r\n      [ fetchUsers.rejected ]: ( state, action ) => {\r\n        state.loading = false;\r\n      },\r\n    },\r\n});\r\n\r\nexport const { userAdded, userUpdated, userDeleted } = usersSlice.actions;\r\n\r\n\r\nexport default usersSlice.reducer;","\r\nimport { fetchUsers, userDeleted } from './usersSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function UserList() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { entities } = useSelector(( state ) => state.users );\r\n    const loading = useSelector( ( state ) => state.loading );\r\n\r\n    const handleDelete = ( id ) => {\r\n        dispatch( userDeleted({ id }) );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h1>Redux crud user app</h1>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"two columns\">\r\n                    <button \r\n                        onClick={ () => dispatch( fetchUsers() )}\r\n                        className=\"button-primary\">\r\n                    Load users\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"two columns\">\r\n                    <Link to='/add-user'>\r\n                        <button \r\n                            className=\"button-primary\">\r\n                        Add user\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                { loading ? (\r\n                    'Loading...'\r\n                ) : (\r\n\r\n                    <table className=\"u-full-width\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { entities.length && entities.map( ({ id, name, email }, i ) => (\r\n                            <tr key={ i }>\r\n                                <td>{ id }</td>\r\n                                <td>{ name }</td>\r\n                                <td>{ email }</td>\r\n                                <td>\r\n                                    <button onClick={ () => handleDelete( id )}>Delete</button>\r\n                                    \r\n                                <Link to={`/edit-user/${id}`}>\r\n                                    <button>Edit</button>\r\n                                </Link>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};","import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport React from 'react';\nimport { UserList } from './components/features/users/UserList';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          \n          <Route path=\"/\">\n            <UserList />\n          </Route>\n          \n          <Route path=\"/add-user\">\n            <h2>Add User</h2>\n          </Route>\n\n          <Route path=\"/edit-user\">\n            <h2>Edit User</h2>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from './components/features/users/usersSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        users: usersReducer,\r\n    },\r\n});","import React from 'react';//\nimport ReactDOM from 'react-dom';//\nimport './index.css';//\nimport App from './App';//\nimport reportWebVitals from './reportWebVitals';//\n\nimport { Provider } from 'react-redux';\nimport store  from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}