{"version":3,"sources":["components/users/usersSlice.js","components/users/UserList.jsx","App.js","store.js","index.js"],"names":["fetchUsers","createAsyncThunk","a","fetch","response","json","users","usersSlice","createSlice","name","initialState","entities","loading","reducers","userAdded","state","action","push","payload","userUpdated","id","email","existingUser","find","user","userDeleted","filter","extraReducers","pending","fulfilled","rejected","actions","UserList","dispatch","useDispatch","useSelector","className","onClick","to","length","map","i","handleDelete","App","path","configureStore","reducer","usersReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2c343b38.chunk.js","sourcesContent":["\r\n\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const fetchUsers = createAsyncThunk( 'users/fetchUsers', async () => {\r\n  const response = await fetch ( 'https://jsonplaceholder.typicode.com/users' );\r\n  const users = await response.json();\r\n  return users;\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n    name: \"users\",\r\n    initialState: {\r\n    entities: [],\r\n    loading: false,\r\n  },\r\n\r\n    reducers: {\r\n      userAdded( state, action ) {\r\n        state.entities.push( action.payload );\r\n      },\r\n      userUpdated( state, action ) {\r\n        const { id, name, email } = action.payload;\r\n        const existingUser = state.entities.find( ( user ) => user.id === id );\r\n        \r\n        if ( existingUser ) {\r\n          existingUser.name = name;\r\n          existingUser.email = email;\r\n        }\r\n      },\r\n      userDeleted( state, action ) {\r\n        const { id } = action.payload;\r\n        const existingUser = state.entities.find( ( user ) => user.id === id );\r\n        if ( existingUser ) {\r\n          return state.entities.filter( ( user ) => user.id !== id );\r\n        }\r\n      },\r\n    },\r\n\r\n    extraReducers: {\r\n      [ fetchUsers.pending ]: ( state, action ) => {\r\n        state.loading = true;\r\n      },\r\n      [ fetchUsers.fulfilled ]: ( state, action ) => {\r\n        state.loading = false;\r\n        state.entities = [ ...state.entities, ...action.payload ];\r\n      },\r\n      [ fetchUsers.rejected ]: ( state, action ) => {\r\n        state.loading = false;\r\n      },\r\n    },\r\n});\r\n\r\nexport const { userAdded, userUpdated, userDeleted } = usersSlice.actions;\r\n\r\n\r\nexport default usersSlice.reducer;","import { fetchUsers, userDeleted } from \"./usersSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function UserList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { entities } = useSelector((state) => state.users);\r\n  const loading = useSelector((state) => state.loading);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(userDeleted({id}));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"head__contain\">\r\n        <h1>Welldone</h1>\r\n\r\n        <div className=\"head__contain__btns\">\r\n          <div className=\"two columns\">\r\n            <button\r\n              onClick={() => dispatch(fetchUsers())}\r\n              className=\"button-primary\"\r\n            >\r\n              Load Users\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"two columns\">\r\n            <Link to=\"/add-user\">\r\n              <button className=\"button-primary\">Add User</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table__contain\">\r\n        {loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <table className=\"table__contain__elem\">\r\n            <thead className=\"table__contain__elem--head\">\r\n              <tr>\r\n                <th className=\"table__contain__elem--th\">ID</th>\r\n                <th className=\"table__contain__elem--th\">Name</th>\r\n                <th className=\"table__contain__elem--th\">Email</th>\r\n                <th className=\"table__contain__elem--th\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table__contain__elem--body\">\r\n              {entities.length &&\r\n                entities.map(({ id, name, email }, i) => (\r\n                  <tr className=\"table__contain__elem--tr\" key={i}>\r\n                    <td data-aria-label=\"ID\" className=\"table__contain__elem--td\">{id}</td>\r\n                    <td data-aria-label=\"Name\" className=\"table__contain__elem--td\">{name}</td>\r\n                    <td data-aria-label=\"Email\" className=\"table__contain__elem--td email--cell\">{email}</td>\r\n                    <td data-aria-label=\"Actions\" className=\"table__contain__elem--td\">\r\n                      <button \r\n                        className=\"button-secondary\"\r\n                        onClick={() => handleDelete(id)}>Delete</button>\r\n                      <Link to={`/edit-user/${id}`}>\r\n                        <button className=\"button-secondary\">Edit</button>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport React from 'react';\nimport { UserList } from './components/users/UserList';\n\nimport './Scss/main.scss';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          \n          <Route path=\"/\">\n            <UserList />\n          </Route>\n          \n          <Route path=\"/add-user\">\n            <h2>Add User</h2>\n          </Route>\n\n          <Route path=\"/edit-user\">\n            <h2>Edit User</h2>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}","\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from './components/users/usersSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        users: usersReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store  from './store';\n\nimport './Scss/main.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}